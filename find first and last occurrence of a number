class Solution {
    /*
    int less(vector<int> nums, int target){
        int low=0, high=nums.size()-1;
        while(low<=high){
            int mid=low+(high-low)/2;
            if (nums[mid]==target){
                if (mid==0 || nums[mid-1]!=target) return mid;
                else high=mid-1;
            }
            else if (nums[mid]>=target) high=mid-1;
            else low=mid+1;
        }
        return -1;
    }
    int more(vector<int> nums, int target){
        int low=0, high=nums.size()-1;
        while(low<=high){
            int mid=low+(high-low)/2;
            if (nums[mid]==target){
                if (mid==nums.size()-1 || nums[mid+1]!=target) return mid;
                else low=mid+1;
            }
            else if (nums[mid]<=target) low=mid+1;
            else high=mid-1;
        }
        return -1;
    }
    */

public:
    vector<int> searchRange(vector<int>& nums, int target) {
        /*
        int ind1=less(nums, target);
        int ind2=more(nums, target);
        return {ind1, ind2};
        */
        int f=-1, l=-1;
        for(int i=0;i<nums.size();i++){
            if (nums[i]==target){
                if (f==-1) f=i;
                l=i;
            }
        }
        return {f, l};
    }
};
